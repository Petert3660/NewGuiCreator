plugins {
    id 'org.springframework.boot' version '2.0.3.RELEASE'
}

def actualprojectName = "NewNewGUICreator"
def projectName = "NewGuiCreator"
def version = "1.13"

def jenkins = "C:/Program Files (x86)/Jenkins/workspace"
def testEnvironment = "C:/PTConsultancy/LocalTestEnvironment"
def testDir = "${testEnvironment}/${projectName}"
def buildDir = "${jenkins}/${projectName}"
def localBuildDir = "C:/GradleTutorials/${projectName}"

apply plugin: 'java'
apply plugin: 'org.springframework.boot'

sourceCompatibility = 1.8

repositories {
    mavenCentral()
}

dependencies {

    compile(
            [group: 'org.springframework.boot', name: 'spring-boot-starter-web', version: '2.0.3.RELEASE'],
            [group: 'org.springframework.boot', name: 'spring-boot-starter-actuator', version: '2.0.3.RELEASE'],
            [group: 'org.springframework.boot', name: 'spring-boot-starter-test', version: '2.0.3.RELEASE'],
            [group: 'commons-lang', name: 'commons-lang', version: '2.6'],
            [group: 'commons-io', name: 'commons-io', version: '2.6']
    )

    testCompile group: 'junit', name: 'junit', version: '4.12'
}

bootJar {
    manifest {
        attributes 'Implementation-Title': projectName,
                'Implementation-Version': version
    }
}

task setBuildPaths {
    println "Setting up test environment"

    println "Jenkins directory - ${jenkins}"
    println "Build directory - ${buildDir}"

    delete fileTree("${testDir}")
    file("${testDir}").mkdirs()
}

task copyFiles(dependsOn: test) {
    doLast {
        println "Copying files to testEnvironment now"
        copy {
            from file("${buildDir}/build/libs")
            include "*.jar"
            into file("${testEnvironment}/${projectName}")
        }

        def runnableFile = "${actualprojectName}.jar"
        new File("${testEnvironment}/${projectName}/run.bat").text = """
start /min java -jar $runnableFile
"""
    }
}
